local ReplicatedStorage_upvr = game:GetService("ReplicatedStorage")
local Parent_upvr = script.Parent
local Character_upvr = game:GetService("Players").LocalPlayer.Character
if not Character_upvr then
	Character_upvr = game:GetService("Players").LocalPlayer.CharacterAdded:Wait()
end
local function INLINED() -- Internal function, doesn't exist in bytecode
	tbl.Value = 5
	local tbl = {}
	return tbl
end
if game.PlaceId ~= 88976059384565 or not INLINED() then
end
local any_new_result1_upvr = require(ReplicatedStorage_upvr.Modules.Maid).new()
any_new_result1_upvr:GiveTask(Parent_upvr.AncestryChanged:Connect(function() -- Line 22
	--[[ Upvalues[2]:
		[1]: Parent_upvr (readonly)
		[2]: any_new_result1_upvr (readonly)
	]]
	if not Parent_upvr.Parent then
		any_new_result1_upvr:DoCleaning()
	end
end))
local RemoteEvent_upvr = Parent_upvr:WaitForChild("RemoteEvent", 2)
if not RemoteEvent_upvr then
	RemoteEvent_upvr = {}
	function RemoteEvent_upvr.FireServer(arg1, arg2) -- Line 29
	end
end
local var10_upvw = 0
local Value_upvr = Parent_upvr:WaitForChild("ShootingCooldown").Value
local GunHandler_upvr = require(ReplicatedStorage_upvr.Modules.GunHandler)
local Ammo_upvr = Parent_upvr.Ammo
local Handle_upvr = Parent_upvr:WaitForChild("Handle")
local cframe_upvr = CFrame.new(2.5, 0.35, 0)
local Range_upvr = Parent_upvr:WaitForChild("Range")
any_new_result1_upvr:GiveTask(Parent_upvr.Activated:Connect(function() -- Line 33
	--[[ Upvalues[11]:
		[1]: var10_upvw (read and write)
		[2]: Value_upvr (readonly)
		[3]: GunHandler_upvr (readonly)
		[4]: Character_upvr (readonly)
		[5]: RemoteEvent_upvr (readonly)
		[6]: Parent_upvr (readonly)
		[7]: Ammo_upvr (readonly)
		[8]: Handle_upvr (readonly)
		[9]: cframe_upvr (readonly)
		[10]: Range_upvr (readonly)
		[11]: ReplicatedStorage_upvr (readonly)
	]]
	if tick() - var10_upvw < Value_upvr + 0.02 or _G.GUN_COMBAT_TOGGLE or not GunHandler_upvr.getCanShoot(Character_upvr) then
	else
		var10_upvw = tick()
		RemoteEvent_upvr:FireServer("Shoot")
		local var18_upvw = true
		task.spawn(function() -- Line 40
			--[[ Upvalues[10]:
				[1]: var18_upvw (read and write)
				[2]: Parent_upvr (copied, readonly)
				[3]: Character_upvr (copied, readonly)
				[4]: Ammo_upvr (copied, readonly)
				[5]: GunHandler_upvr (copied, readonly)
				[6]: Handle_upvr (copied, readonly)
				[7]: cframe_upvr (copied, readonly)
				[8]: Range_upvr (copied, readonly)
				[9]: ReplicatedStorage_upvr (copied, readonly)
				[10]: RemoteEvent_upvr (copied, readonly)
			]]
			while true do
				local var19
				var19 = 0.1
				if not task.wait(var19) then break end
				if not var18_upvw then break end
				var19 = Parent_upvr
				var19 = Character_upvr
				if var19.Parent ~= var19 then break end
				var19 = Ammo_upvr
				var19 = 0
				if var19 >= var19.Value then break end
				var19 = GunHandler_upvr
				var19 = Character_upvr
				if not var19.getCanShoot(var19) then break end
				var19 = Handle_upvr.CFrame * cframe_upvr
				local Position = var19.Position
				local function INLINED_2() -- Internal function, doesn't exist in bytecode
					var19 = Parent_upvr.Default.Mesh:FindFirstChild("Muzzle")
					return var19
				end
				if not Parent_upvr:FindFirstChild("Default") or not Parent_upvr.Default:FindFirstChild("Mesh") or not INLINED_2() then
					var19 = {}
					var19.WorldPosition = Position
				end
				local any_shoot_result1, any_shoot_result2, any_shoot_result3 = GunHandler_upvr.shoot({
					Shooter = Character_upvr;
					Handle = Handle_upvr;
					ForcedOrigin = Position;
					AimPosition = var19.WorldPosition + GunHandler_upvr.getAim(var19.WorldPosition) * 200;
					BeamColor = Color3.new(1, 0.545098, 0.14902);
					Range = Range_upvr.Value;
				})
				ReplicatedStorage_upvr.MainEvent:FireServer("ShootGun", Handle_upvr, var19.WorldPosition, any_shoot_result1, any_shoot_result2, any_shoot_result3)
			end
			RemoteEvent_upvr:FireServer()
		end)
		Parent_upvr.Deactivated:Wait()
		var18_upvw = false
	end
end))
Parent_upvr:GetPropertyChangedSignal("Grip"):Connect(function() -- Line 64
	game.ReplicatedStorage:WaitForChild("MainEvent"):FireServer("CHECKER_4")
end)


local oldnc 

oldnc = hookmetamethod(game, "__namecall", function(self, ...)
	if self.Name == "MainEvent" and getnamecallmethod():lower() == "fireserver" then 
		local args = {...}
		if args[1] == "ShootGun" then 
			for i,v in args do 
				warn(v)
			end 
		end 
	end 
	return oldnc(self, ...)
end)

for i,v in getconnections(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Activated) do 
	local funcinfo = debug.getinfo(v.Function)
	for i = 1, funcinfo.nups do
		local name, val = debug.getupvalue(v.Function, i)
		if tostring(name) == "0.15" then 
			debug.setupvalue(v.Function, i, 0)
			warn("set")
		end
		warn(name)
		print(val)
	end
end